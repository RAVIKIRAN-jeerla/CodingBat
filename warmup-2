public String stringTimes(String str, int n) {
  String result= "";
  for(int i=1;i<=n;i++){
    result=result+str;}
    
    return result;
  
}

public String frontTimes(String str, int n) {
  String result="";
  if(str.length()<=3){
    for(int i=0;i<n;i++){
      result+=str;
    }
  }
  else if(str.length()>3){
    for(int i=0;i<n;i++){
      result+=str.substring(0,3);
    }
  }
  return result;
}

int countXX(String str) {
  int count=0;
  for(int i=0;i<str.length()-1;i++){
    if(str.charAt(i)=='x'&&str.charAt(i+1)=='x'){
      count++;
      
    }
    
  }
  return count;
}

boolean doubleX(String str) {
    int i = str.indexOf('x');  // find first 'x'
    if (i == -1 || i + 1 >= str.length()) {
        return false; // no 'x' or 'x' is last char
    }
    return str.charAt(i + 1) == 'x'; // check next char
}

public String stringBits(String str) {
  String result="";
  for(int i=0;i<str.length();i++){
    if(i%2==0){
      result=result+str.charAt(i);
    }
  }
  return result;
}

public String stringSplosion(String str) {
    String result = "";
    for (int i = 0; i < str.length(); i++) {
        result = result + str.substring(0, i + 1);
    }
    return result;
}


public int last2(String str) {
  if (str.length() < 2) return 0;
  int count=0;
  String target=str.substring(str.length()-2);
  for(int i=0;i<str.length()-2;i++){
    String end=str.substring(i,i+2);
    if(end.equals(target))
    count++;
  }
  return count;
}

public int arrayCount9(int[] nums) {
  int count=0;
  for(int i=0;i<nums.length;i++){
    if(nums[i]==9){
      count++;
    }
    
  }
  return count;
}

public boolean arrayFront9(int[] nums) {
  int end = nums.length;
  if (end > 4) end = 4;
  
  for (int i=0; i<end; i++) {
    if (nums[i] == 9) return true;
  }
  
  return false;
}

public boolean array123(int[] nums) {
boolean name=false;
if(nums.length>=3){
  for(int i=0;i<=nums.length-3;i++){
    if(nums[i]==1&&nums[i+1]==2&&nums[i+2]==3){
      name=true;
    }
  }
}
else if(nums.length<3){
  name=false;
}
return name;}

public int stringMatch(String a, String b) {
  int length=a.length();
  int count=0;
  if(b.length()<a.length())length=b.length();
  for(int i=0;i<length-1;i++){
    String asubstring=a.substring(i,i+2);
    String bsubstring=b.substring(i,i+2);
    if(asubstring.equals(bsubstring)){
      count++;
    }
  }
  return count;
}


public String stringX(String str) {
  String name="";
  for(int i=0;i<str.length();i++){
    if(i==0||i==str.length()-1){
      name=name+str.substring(i,i+1);
    }
    else if(i!=0&&i!=str.length()-1){
      if(!str.substring(i,i+1).equals("x")){
        name=name+str.substring(i,i+1);
      }
    }
  }
  return name;
}


public String altPairs(String str) {
  String result="";
  for(int i=0;i<str.length();i+=4){
    int end =i+2;
    if(end>str.length()){
      end=str.length();
    }
  result=result+str.substring(i,end);
  }
  return result;
}

public String stringYak(String str) {
  String result = "";
  
  for (int i=0; i<str.length(); i++) {
    if (i+2<str.length() && str.charAt(i)=='y' && str.charAt(i+2)=='k') {
      i =  i + 2;
    } else { 
      result = result + str.charAt(i);
    }
  }
  
  return result;
}

public int array667(int[] nums) {
  int count=0;
  for( int i=0;i<nums.length-1;i++){
    if((nums[i]==6)&&(nums[i+1]==6|| nums[i+1]==7))
    count++;
  }
  return count;
}

public boolean noTriples(int[] nums) {
  boolean name=true;
  for(int i=0;i<nums.length-2;i++){
    if(nums[i]==nums[i+1]&&nums[i]==nums[i+2])
    name=false;
  }
  return name;
}


public boolean has271(int[] nums) {
    for (int i = 0; i < nums.length - 2; i++) {
        int num = nums[i];
        if (nums[i+1] == num + 5 &&
            Math.abs(nums[i+2] - (num - 1)) <= 2) { 
            return true;
        }
    }
    return false;
}

